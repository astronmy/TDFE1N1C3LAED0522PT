* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
.container {
  border: 1px solid red;
  width: 80%;
  height: 300px;
}

.box{
  background-color: blue;
  height: 80px;
  width: 80px;
}
/*
    selector:nombre_pseudo_clase{
      propiedad: valor....
    }

    :hover se ejecuta con el evento mouseover
    :active se ejecuta con el evento click (mantener el clicl)

*/
.box:hover{
  background-color: yellow;
}
.box:active{
  background-color: green;
}
input[type="text"]{
  background-color: grey;
}
input[type="checkbox"]:checked{
  accent-color: red;
}
input[type="text"]:focus{
  background-color: white;
}
form{
  height: 200px;
}
form:focus-within{
  background-color: brown;
}

.contenedor {
  border: 1px solid red;
  width: 80%;
  height: 180px;
}

.caja{
  background-color: crimson;
  color: white;
  text-align: center;
  line-height: 50px;
  height: 50px;
  width: 50px;
  font-weight: bold;
  margin: 5px 0;
}
.contenedor .caja{
  margin-left: 1rem;
}

/*
Only Of Type
----------------------------------------------------
  :only-of-type  => selecciona a los elementos unicos (en su tipo ejemplo: unico div)
                   en su seccion o su padre
  .caja:only-of-type  (unico elemento con esa clase)

First of Type
----------------------------------------------------------
  :first-of-type => selecciona el primer elemento de su TIPO en su contenedor 

Last of Type
-------------------------------------------------------------
  :last-of-type  => selecciona al ultimo elemento de su tipo

 Nested of type
------------------------------------------------------------
  :nth-of-type(n)   => Selecciona a los elementos de su TIPO en el orden dado por N
            --odd   => Selecciona impares
            --even  => Selecciona pares

            Puedo operar con N y hacer secuencia de valores. Comienza en 0
            ver => 2n
                   2*0=0
                   2*1=2
                   2*2=4
                   2*3=6
                  
Nested Child
----------------------------------------------------------
:only-child{}         => Hijo unico sin hermanos. Es decir el unico en su tipo
                           sin hermanos que cumpla la condicion
:first-child          => Selecciona al primer hijo del contenedor 
                          (debe estar primero y cumplir la condicion) 
:last-child           => Ultimo elemento de su padre que respete la condicion


:nth-of-child(n)   => Selecciona a los elementos su posicion dada por n
            --odd   => Selecciona impares
            --even  => Selecciona pares

            Puedo operar con N y hacer secuencia de valores. Comienza en 0
            ver => 2n
                   2*0=0
                   2*1=2
                   2*2=4
                   2*3=6
*/

.caja:last-child{
  background-color: tomato;
}

.parrafo{
  font-size: 1.4rem;
  padding: 2rem;
}
.parrafo::selection{
  background-color: blue;
  color: white;
}
.parrafo::first-line{
  font-weight: bold;
}
.parrafo::first-letter{
  font-size: 4rem;
  font-style: italic;
  color: brown;
}
.price{
  display: block;
  text-align: center;
  font-size: 4rem;
  font-weight: bold;
}
/*

      before::contenido::after

*/
.price::before{
  content: "$"; /*url('img/logo.png')*/
  font-size: 6rem;
  color: blue;
}
.price::after{
  content: ".00"; 
  font-size: 2rem;
  color: blue;
}